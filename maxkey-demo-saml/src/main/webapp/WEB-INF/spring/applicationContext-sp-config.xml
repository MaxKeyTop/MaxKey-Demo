<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans-3.0.xsd">

	<bean id="samlInitializer" class="org.opensaml.DefaultBootstrap" init-method="bootstrap"/>


	<bean id="timeService" class="com.connsec.saml.util.TimeService" />
	<bean id="idService" class="com.connsec.saml.util.IDService" />

	<bean id="velocityEngine" class="org.springframework.ui.velocity.VelocityEngineFactoryBean">
	   <property name="preferFileSystemAccess" value="false"/>
	   <property name="velocityProperties">
		<props>
			<prop key="resource.loader">classpath</prop>
			<prop key="classpath.resource.loader.class">org.apache.velocity.runtime.resource.loader.ClasspathResourceLoader</prop>
		</props>
		</property>
	</bean>
	
	<bean id="samlParserPool"  class="org.opensaml.xml.parse.BasicParserPool" >

			<property name="maxPoolSize" value="${MAX_PARSER_POOL_SIZE}" /> 
	</bean>
	
	<bean id="decoder" class="org.opensaml.saml2.binding.decoding.HTTPPostSimpleSignDecoder">
			<constructor-arg ref="samlParserPool"/>
	</bean>

	<bean id="bindingAdpater" class="com.connsec.saml.binding.PostBindingAdapter">
		<constructor-arg value="${ISSUING_ENTITY_ID}"></constructor-arg>
		<constructor-arg ref="decoder"/>
		<constructor-arg ref="securityPolicyResolver"/>
		<property name="velocityEngine" ref="velocityEngine" />
	</bean>

	<bean id="securityPolicyResolver" class="org.opensaml.ws.security.provider.StaticSecurityPolicyResolver">
		<constructor-arg ref="securityPolicy"/>
	</bean>

	<bean id="securityPolicy" class="com.connsec.saml.binding.SecurityPolicyDelegate">
		<constructor-arg>
			<list>
				<ref bean="signatureSecurityPolicyRule"/>
				<ref bean="issueInstantRule"/>
				<ref bean="messageReplayRule"/>
			</list>
		</constructor-arg>
	</bean>


	<bean id="mapBasedStorageService" class="org.opensaml.util.storage.MapBasedStorageService"/>
		
	<bean id="replayCache" class="org.opensaml.util.storage.ReplayCache">
		<constructor-arg ref="mapBasedStorageService"/>
		
		<constructor-arg value="${REPLAY_CACHE_LIFE_IN_MILLIS}"></constructor-arg>
	</bean> 
	
	<bean id="messageReplayRule" class="org.opensaml.common.binding.security.MessageReplayRule">
		<constructor-arg ref="replayCache"/>
	</bean>

	<bean id="issueInstantRule" class="org.opensaml.common.binding.security.IssueInstantRule">
		<constructor-arg index="0" value="${ISSUE_INSTANT_CHECK_CLOCK_SKEW_IN_SECONDS}"/>
		<constructor-arg index="1" value="${ISSUE_INSTANT_CHECK_VALIDITY_TIME_IN_SECONDS}"/>
		<property name="requiredRule" value="true"/>
		
	</bean>

	<bean id="signatureSecurityPolicyRule" class="com.connsec.saml.binding.SignatureSecurityPolicyRule">
			<constructor-arg ref="keyStoreCredentialResolverDelegate"></constructor-arg>
			<constructor-arg >
				<bean class="org.opensaml.security.SAMLSignatureProfileValidator"></bean>
			</constructor-arg>
	</bean>

	<bean id="keyStoreCredentialResolverDelegate" class="com.connsec.saml.binding.KeyStoreCredentialResolverDelegate">
	
		<property name="privateKeyPasswordsByAlias">
			<map>
				<entry key="${ISSUING_ENTITY_ID}" value="${KESTORE_PRIVATE_KEY_PASSWORD}" />				
			</map>
		</property>
		
		<property name="keystorePassword" value="${KEYSTORE_PASSWORD}" /> 
	
		<property name="b64EncodedKeystore" value="${B64_ENCODED_KEYSTORE}"/>
		<!-- 默认读取 keyStoreFile -->
		<property name="keyStoreFile" value="${keyStoreFile}"/>
		
	
	</bean>

	<bean id="assertionConsumer" class="com.connsec.saml.RealAssertionConsumer">
	</bean>


</beans>
